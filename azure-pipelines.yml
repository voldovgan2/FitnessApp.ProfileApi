# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more: 
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self
  fetchDepth: 0
  
- task: NuGetToolInstaller@1
  displayName: Install nuget tools
  inputs:
    versionSpec: '5.9.1'
- task: NuGetCommand@2
  displayName: NuGet restore
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: 'd4b2f77e-b5c6-4527-9536-edcd13c21ed4/127819fe-d4da-4c0d-a38a-7ddf2d084207'

- task: SonarCloudPrepare@1
  displayName: Prepare Sonar cloud
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'volodimirdovgan'
    scannerMode: 'MSBuild'
    projectKey: 'volodimirdovgan_FitnessApp.ProfileApi'
    projectName: 'FitnessApp.ProfileApi'

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    buildProperties: 

- task: SonarCloudAnalyze@1
  displayName: Sonar cloud analyze
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  displayName: Sonar cloud publis results
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: Publish artifact
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
- task: PublishPipelineArtifact@1
  displayName: Publish pipeline artifact
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'profileApi'
